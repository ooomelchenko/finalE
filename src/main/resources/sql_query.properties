user.createUser=INSERT into users ( login, password, firstName, lastName, email, role) VALUES(?, ?, ?, ?, ?, ?);
user.update= UPDATE users SET login=?,password=?, firstName=?, lastName=?, email=?, role=? where id_user=?;
user.findByLoginPassword=SELECT * FROM users WHERE login = ? and password = ?;
user.checkLogin=SELECT count(id_user) from users where login= ?;
user.findAll=select * from users LEFT JOIN orders using(id_user);
user.findById=SELECT * from users where id_user=?;
user.refill=UPDATE USERS SET account_sum = account_sum + ? where id_user= ?;
user.chargeOff=UPDATE USERS SET account_sum = account_sum - ? where id_user= ?;
user.delete=DELETE from users where id_user=?;

route.findAll=select * from routes left join (select * from available_options where is_available=1) as options using(id_route) left join tariffs using(id_tariff) ORDER BY route_start asc;
route.findById=select * from routes where id_route = ?;
route.create.withLocalFields=insert into routes (route_start, route_end, distance_km, route_start_ua, route_end_ua) values (?, ?, ?, ?, ?)
route.create=insert into routes (route_start, route_end, distance_km) values (?, ?, ?);
route.update=update routes set route_start=? route_end=? distance_km=?;
route.delete = DELETE from routes where id_route=?;

tariff.create=INSERT INTO tariffs(name,cost_per_km,cost_per_kg,pace_day_km) value(?,?,?,?);
tariff.update=Update tariffs set cost_per_km=?, cost_per_kg=?, pace_day_km=? where id_tariff=?;
tariff.findAll=select * from tariffs;
tariff.findById=select * from tariffs where id_tariff = ?;
tariff.find.byRouteId=SELECT * FROM tariffs left join available_options using (id_tariff) left join routes using (id_route) where id_route = ? and is_available =1;
tariff.delete=DELETE from tariffs where id_tariff=?;

order.findById=select * from orders where id = ?
order.findAll=SELECT * FROM orders LEFT JOIN bills using(id_order) left JOIN available_options using(id_option) left join routes using(id_route) left join tariffs using(id_tariff) ORDER BY arrival_date;
order.findByUserId=SELECT * FROM orders LEFT JOIN bills using(id_order) left JOIN available_options using(id_option) left join routes using(id_route) left join tariffs using(id_tariff) where orders.id_user = ? ORDER BY arrival_date;
order.create=Insert into orders(type, weight, arrival_date, id_option, id_user) value(?,?,?,?,?);
order.update=UPDATE orders SET type=?, weight=?, arrival_date=?;
order.delete=DELETE from orders where id_order=?;

option.findByRouteTariffId=SELECT * FROM available_options LEFT JOIN routes using(id_route) left join tariffs using(id_tariff) where id_route=? and id_tariff =? ;
option.findAll=select * from available_options left join routes using(id_route) left join tariffs using(id_tariff);
option.findById=select * from available_options left join routes using(id_route) left join tariffs using(id_tariff) where id_option = ? ;
option.update.byRouteTariffId=UPDATE available_options set is_available=? where id_route=? and id_tariff=?;
option.create=INSERT into available_options(is_available,id_route,id_tariff) VALUES(?,?,?);
option.delete = DELETE from available_options where id_option=?;

bill.create=INSERT INTO bills(total, is_paid, id_user, id_order) values (?, ?, ?, ?);
bill.update=UPDATE bills SET total=?, is_paid=? where id_bill=?;
bill.checkIsPaid=SELECT is_paid FROM bills WHERE id_bill = ?;
bill.settleUp=UPDATE bills SET is_paid=1 where id_bill= ?;
bill.findById=SELECT * from bills left join users using(id_user) where id_bill = ?;
bill.findAll=SELECT * from bills left join users using(id_user);
bill.delete = DELETE from bills where id_bill=?;